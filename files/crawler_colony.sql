/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 50547
Source Host           : localhost:3306
Source Database       : crawler_colony

Target Server Type    : MYSQL
Target Server Version : 50547
File Encoding         : 65001

Date: 2017-05-19 13:08:49
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for crawler_job
-- ----------------------------
DROP TABLE IF EXISTS `crawler_job`;
CREATE TABLE `crawler_job` (
  `jobId` varchar(255) NOT NULL DEFAULT '' COMMENT 'job Id 唯一',
  `name` varchar(255) DEFAULT NULL COMMENT 'job 名称',
  `period` varchar(255) DEFAULT NULL COMMENT 'job 周期 毫秒单位',
  `nextStartDate` datetime DEFAULT NULL COMMENT 'job 下一个周次执行时间',
  `status` varchar(255) DEFAULT NULL COMMENT 'job  状态',
  `priority` int(11) DEFAULT NULL COMMENT 'job 优先级',
  `maxThread` int(11) DEFAULT NULL COMMENT 'job  最大使用线程数',
  `note` text COMMENT 'job 备注',
  `projectId` int(11) DEFAULT NULL COMMENT 'job 所属项目id ',
  `sourceId` int(11) DEFAULT NULL COMMENT 'job 数据源id',
  `createDate` datetime DEFAULT NULL COMMENT 'job创建时间',
  PRIMARY KEY (`jobId`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of crawler_job
-- ----------------------------
INSERT INTO `crawler_job` VALUES ('sina_weibo', 'sina_weibo', '432000000', '2017-05-22 16:20:21', 'off', '6', '1', null, '1', '0', '2017-05-17 11:26:31');
INSERT INTO `crawler_job` VALUES ('p2p.d_com', 'p2p.d_com', '432000000', '2017-05-23 10:11:58', 'standby', '6', '1', null, '2', '0', '2017-05-17 16:59:17');
INSERT INTO `crawler_job` VALUES ('p2p.haioujinfu', 'p2p.haioujinfu', '432000000', '2017-05-23 10:11:53', 'standby', '6', '1', null, '2', '0', '2017-05-17 17:35:16');
INSERT INTO `crawler_job` VALUES ('p2p.caifupad', 'p2p.caifupad', '432000000', '2017-05-23 10:11:48', 'standby', '6', '1', null, '2', '0', '2017-05-17 16:47:22');
INSERT INTO `crawler_job` VALUES ('p2p.passport_trc', 'p2p.passport_trc', '432000000', '2017-05-23 10:11:29', 'standby', '6', '1', null, '2', '0', '2017-05-17 17:49:27');
INSERT INTO `crawler_job` VALUES ('p2p.jubaozhu', 'p2p.jubaozhu', '432000000', '2017-05-23 10:11:26', 'standby', '6', '1', null, '2', '0', '2017-05-17 18:01:58');
INSERT INTO `crawler_job` VALUES ('p2p.xhx_exjr', 'p2p.xhx_exjr', '432000000', '2017-05-23 09:25:20', 'error', '6', '1', null, '2', '0', '2017-05-17 18:19:16');
INSERT INTO `crawler_job` VALUES ('p2p.qycfu', 'p2p.qycfu', '432000000', '2017-05-23 11:07:16', 'standby', '6', '1', null, '2', '0', '2017-05-17 19:14:04');
INSERT INTO `crawler_job` VALUES ('p2p._100lishi', 'p2p._100lishi', '432000000', '2017-05-23 11:22:58', 'standby', '6', '1', null, '2', '0', '2017-05-18 11:06:44');
INSERT INTO `crawler_job` VALUES ('p2p._168p2p', 'p2p._168p2p', '432000000', '2017-05-23 13:49:24', 'standby', '6', '1', null, '2', '0', '2017-05-18 11:22:47');
INSERT INTO `crawler_job` VALUES ('p2p._16pu', 'p2p._16pu', '432000000', '2017-05-23 13:36:58', 'standby', '6', '1', null, '2', '0', '2017-05-18 13:36:39');
INSERT INTO `crawler_job` VALUES ('p2p._178wangdai', 'p2p._178wangdai', '432000000', '2017-05-23 13:49:37', 'standby', '6', '1', null, '2', '0', '2017-05-18 13:45:20');
INSERT INTO `crawler_job` VALUES ('p2p._24jd', 'p2p._24jd', '432000000', '2017-05-23 14:18:50', 'standby', '6', '1', null, '2', '0', '2017-05-18 14:13:47');
INSERT INTO `crawler_job` VALUES ('p2p._33lend', 'p2p._33lend', '432000000', '2017-05-23 14:58:44', 'standby', '6', '1', null, '2', '0', '2017-05-18 14:53:38');
INSERT INTO `crawler_job` VALUES ('p2p.ibank365', 'p2p.ibank365', '432000000', '2017-05-23 15:42:20', 'run', '6', '1', null, '2', '0', '2017-05-18 15:29:18');
INSERT INTO `crawler_job` VALUES ('p2p._51bccf', 'p2p._51bccf', '432000000', '2017-05-23 17:59:43', 'standby', '6', '1', null, '2', '0', '2017-05-18 15:56:39');
INSERT INTO `crawler_job` VALUES ('p2p._51jiecai', 'p2p._51jiecai', '432000000', '2017-05-23 17:59:43', 'standby', '6', '1', null, '2', '0', '2017-05-18 17:59:32');
INSERT INTO `crawler_job` VALUES ('p2p._51rzy', 'p2p._51rzy', '432000000', '2017-05-23 18:27:02', 'standby', '6', '1', null, '2', '0', '2017-05-18 18:26:47');

-- ----------------------------
-- Table structure for crawler_log
-- ----------------------------
DROP TABLE IF EXISTS `crawler_log`;
CREATE TABLE `crawler_log` (
  `jobId` varchar(180) NOT NULL COMMENT 'jobId',
  `flag` bigint(20) NOT NULL COMMENT 'job周期 启动的时间戳',
  `taskName` varchar(150) NOT NULL COMMENT 'taskName',
  `successCount` int(255) DEFAULT NULL COMMENT 'task 执行成功次数',
  `dbCount` int(255) DEFAULT NULL,
  `failCount` int(255) DEFAULT NULL COMMENT 'task执行失败次数',
  `toDoCount` int(255) DEFAULT NULL COMMENT 'task 剩余个数',
  `createDate` datetime DEFAULT NULL COMMENT '日志创建时间',
  `modifiedDate` datetime DEFAULT NULL COMMENT '日志更新时间',
  PRIMARY KEY (`jobId`,`flag`,`taskName`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of crawler_log
-- ----------------------------

-- ----------------------------
-- Table structure for job_task
-- ----------------------------
DROP TABLE IF EXISTS `job_task`;
CREATE TABLE `job_task` (
  `jobId` varchar(255) NOT NULL DEFAULT '' COMMENT 'jobId',
  `taskName` varchar(77) NOT NULL COMMENT 'taskName',
  `code` text COMMENT '脚本代码',
  `bytes` mediumblob COMMENT '脚本二进制',
  `date` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`jobId`,`taskName`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of job_task
-- ----------------------------
INSERT INTO `job_task` VALUES ('p2p/caifupad', 'Discern', 'package script.p2p.caifupad;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.parser.Parser;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"caifupad\");\n        log.info(page.getContent());\n        JSONObject json = Parser.json(page.getContent());\n        if(json.getString(\"info\").equals(\"手机号不存在\")){\n            map.put(\"registered\",\"0\");\n        }else if(json.getBoolean(\"isSuccess\")){\n            map.put(\"registered\",\"1\");\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p_caifupad', 'Discern', 'package script.p2p_caifupad;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.parser.Parser;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"caifupad\");\n        log.info(page.getContent());\n        JSONObject json = Parser.json(page.getContent());\n        if(json.getString(\"info\").equals(\"手机号不存在\")){\n            map.put(\"registered\",\"0\");\n        }else if(json.getBoolean(\"isSuccess\")){\n            map.put(\"registered\",\"1\");\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p_caifupad', 'Init', 'package script.p2p_caifupad;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init  init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.caifupad.com/user/isMobileNoToSendMsg\");\n            newCrawler.setBody(\"mobileNo=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('sina_weibo', 'Download', 'package script.sina_weibo;\n\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport java.util.List;\n\n/**\n * Created by mi on 2017/5/12.\n */\npublic class Download implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        String url = crawler.getUrl();\n        String path = url.substring(url.lastIndexOf(\"/\"), url.length());\n        DB.saveFile(path,page.getResponseBytes());\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('sina_weibo', 'ImgList', 'package script.sina_weibo;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.parser.*;\nimport com.dang.crawler.core.parser.Text;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport com.dang.crawler.resources.utils.DateUtils;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.WebDriver;\nimport java.util.*;\n\n/**\n * Created by dang on 17-5-10.\n */\npublic class ImgList implements Script {\n    public static void main(String []args) throws Exception {\n        Crawler crawler = new Crawler();\n        crawler.setUrl(\"http://weibo.com/u/2515047730?topnav=1&wvr=6&topsug=1&is_hot=1\");\n        new ImgList().work(crawler,new Job());\n    }\n    @Override\n    public List<Task> work(final Crawler crawler,Job job) throws Exception {\n        WebDriver web = Fetch.getWebDriver();\n        web.get(crawler.getUrl());\n        Thread.sleep(2000);\n        for(int i = 0;i<5;i++) {\n            ((JavascriptExecutor) web).executeScript(\"document.body.scrollTop+=10000\");\n            Thread.sleep(2000);\n        }\n//        Base base = new Base(web.getPageSource());\n//        Fetch.freeDriver(web);\n//        List<Map> dbList = new ArrayList<>();\n//        List<Crawler> crawlers = new ArrayList<>();\n//        for(Base item:base.jsoup(\".WB_detail\").list()){\n//            Map map = new HashMap();\n//            map.put(\"userName\",item.jsoup(\".W_f14.W_fb.S_txt1\").string());\n//            map.put(\"time\",item.jsoup(\"a.S_txt2[title]\").string());\n//            map.put(\"content\",item.jsoup(\".WB_text\").string());\n//            List<String> imageURLList = new ArrayList<>();\n//            for(Base li : item.jsoup(\"li img\").list()){\n//                String url = li.attribute(\"src\");\n//                imageURLList.add(url);\n//                Crawler nextCrawler = new Crawler();\n//                nextCrawler.setUrl(url);\n//                crawlers.add(nextCrawler);\n//                //Downloader.getInstance().addURL(url);\n//            }\n//            map.put(\"imageList\",imageURLList);\n//            map.put(\"_crawler_date\", DateUtils.dateConvertToString(new Date(),\"yyyy-MM-dd HH:mm:ss\"));\n//            //map.put(\"userID\", crawler.get(\"userId\").toString());\n//            //map.put(\"userName\", crawler.get(\"userName\").toString());\n//            dbList.add(map);\n//        }\n        Text text = Parser.html(web.getPageSource());\n        Fetch.freeDriver(web);\n        List<Map> dbList = new ArrayList<>();\n        List<Crawler> crawlers = new ArrayList<>();\n        for(Jsoup item:text.jsoup(\".WB_detail\")){\n            Map<String,Object> map = new HashMap();\n            map.put(\"userName\",item.jsoup(\".W_f14.W_fb.S_txt1\").toString());\n            map.put(\"time\",item.jsoup(\"a.S_txt2[title]\").toString());\n            map.put(\"content\",item.jsoup(\".WB_text\").toString());\n            List<String> imageURLList = new ArrayList<>();\n            for(Jsoup li : item.jsoup(\"li img\")){\n                String url = li.attr(\"src\").toString();\n                imageURLList.add(url);\n                Crawler nextCrawler = new Crawler();\n                nextCrawler.setUrl(url);\n                crawlers.add(nextCrawler);\n                //Downloader.getInstance().addURL(url);\n            }\n            map.put(\"imageList\",imageURLList);\n            map.put(\"_crawler_date\", DateUtils.dateConvertToString(new Date(),\"yyyy-MM-dd HH:mm:ss\"));\n            map.put(\"userId\", crawler.get(\"userId\").toString());\n            //map.put(\"userName\", crawler.get(\"userName\").toString());\n            dbList.add(map);\n        }\n        DB.insert(\"script_task_imgList\",\"userId\",dbList);\n        List<Task> result = new ArrayList<>();\n        result.add(new Task(crawlers,\"Download\"));\n        return result;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('sina_weibo', 'Init', 'package script.sina_weibo;\n\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-10.\n */\npublic class Init implements Script {\n    public static void main(String []args){\n        try {\n            Job job = new Job();\n            job.setProjectId(1);\n            new Init().work(new Crawler(),job);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    @Override\n    public List<Task> work(final Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerMQList = new ArrayList<>();\n        List<Keyword> keywordList = DB.getKeyWorld(0,10,crawler,job);\n        for (Keyword keyword :keywordList) {\n            Crawler crawlerMQ = new Crawler();\n            crawlerMQ.setUrl(\"http://weibo.com/u/\" + keyword.getKeyword() + \"?topnav=1&wvr=6&topsug=1\");\n            crawlerMQ.put(\"userId\", keyword.getKeyword());\n            crawlerMQList.add(crawlerMQ);\n        }\n        ArrayList<Task> jobList = new ArrayList<Task>();\n        jobList.add(new Task(crawlerMQList,\"ImgList\"));\n        return jobList;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.d_com', 'Init', 'package script.p2p.d_com;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://d.com.cn/member/mobileajaxcheck.html\");\n            newCrawler.setBody(\"mobile=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.caifupad', 'Init', 'package script.p2p.caifupad;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init  init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.caifupad.com/user/isMobileNoToSendMsg\");\n            newCrawler.setBody(\"mobileNo=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.caifupad', 'Discern', 'package script.p2p.caifupad;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.parser.Parser;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"caifupad\");\n        log.info(page.getContent());\n        JSONObject json = Parser.json(page.getContent());\n        if(json.getString(\"info\").equals(\"手机号不存在\")){\n            map.put(\"registered\",\"0\");\n        }else if(json.getBoolean(\"isSuccess\")){\n            map.put(\"registered\",\"1\");\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.haioujinfu', 'Init', 'package script.p2p.haioujinfu;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"http://haioujinfu.com/index.php?ctl=ajax&act=mobile_get_pwd_check_field&fhash=LgsusKqMxRJRNvtyqSfxGlUHDbYJeQBecvtUMgEhdCwAJzvEBC\");\n            newCrawler.setBody(\"user_mobile=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.haioujinfu', 'Discern', 'package script.p2p.haioujinfu;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.parser.Parser;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        //不存在{\"status\":0,\"info\":\"\\u5bf9\\u5e94\\u4f1a\\u5458\\u4e0d\\u5b58\\u5728\"}\n        //存在{\"status\":1}\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"haioujinfu\");\n        JSONObject json = null;\n        try {\n             json = Parser.json(page.getContent());\n        }catch (Exception e){\n            log.info(page.getContent());\n        }\n        if(json.getInteger(\"status\").equals(0)){\n            map.put(\"registered\",\"0\");\n        }else if(json.getInteger(\"status\").equals(1)){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.passport_trc', 'Init', 'package script.p2p.passport_trc;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://passport.trc.com/proxy/account/user/phone/exist/\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.passport_trc', 'Discern', 'package script.p2p.passport_trc;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.parser.Parser;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        //不存在{\"have\":false}\n        //存在{\"have\":true}\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"passport.trc.com\");\n        JSONObject json = null;\n        try {\n             json = Parser.json(page.getContent());\n        }catch (Exception e){\n            log.info(page.getContent());\n        }\n        if(!json.getBoolean(\"have\")){\n            map.put(\"registered\",\"0\");\n        }else if(json.getBoolean(\"have\")){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.jubaozhu', 'Init', 'package script.p2p.jubaozhu;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.jubaozhu.com/user/checkPhone.html?phone=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.xhx_exjr', 'Init', 'package script.p2p.xhx_exjr;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport com.dang.crawler.resources.mysql.model.Keyword;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        crawler.setUrl(\"http://new.xhx-exjr.com/user/retrievepwphoneidentifypage.html?3-1.IBehaviorListener.0-body-form-txtUserPhone\");\n        crawler.setBody(\"txtUserPhone=\"+\"17060910200\");\n        Page page = Fetch.fetch(crawler);\n        Map<String,String> map = new HashMap();\n        map.put(\"Accept\",\"application/xml, text/xml, */*; q=0.01\");\n        map.put(\"Accept-Encoding\",\"gzip, deflate\");\n        map.put(\"Accept-Language\",\"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3\");\n        map.put(\"Connection\",\"keep-alive\");\n        map.put(\"Content-Type\",\"application/x-www-form-urlencoded; charset=UTF-8\");\n        map.put(\"Host\",\"new.xhx-exjr.com\");\n        map.put(\"Referer\", \"http://new.xhx-exjr.com/user/retrievepwphoneidentifypage.html?2\");\n        map.put(\"User-Agent\", \"Mozilla/5.0 (X11; Linux x86_64; rv:53.0) Gecko/20100101 Firefox/53.0\");\n        map.put(\"Wicket-Ajax-BaseURL\",\"user/retrievepwphoneidentifypage.html?2\");\n        map.put(\"X-Requested-With\",\"XMLHttpRequest\");\n        map.put(\"Wicket-Ajax\",\"true\");\n        map.put(\"Cookie\",\"JSESSIONID=AD9A74C556214C1277C3211159663AD1; Hm_lvt_a36c1138d06a9411d5c5891b06d37686=1495015375,1495021612; Hm_lpvt_a36c1138d06a9411d5c5891b06d37686=1495023496\");\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setHeader(map);\n            newCrawler.setUrl(\"http://new.xhx-exjr.com/user/retrievepwphoneidentifypage.html\");\n            newCrawler.setBody(\"txtUserPhone=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.qycfu', 'Init', 'package script.p2p.qycfu;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://qycfu.com/registration/checkOnly_phone?fieldId=form-validation-field-0&fieldValue=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.qycfu', 'Discern', 'package script.p2p.qycfu;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        //不存在[\"form-validation-field-0\",true]\n        //存在{\"have\":true}\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"passport.trc.com\");\n        if(page.getContent().trim().equals(\"[\\\"form-validation-field-0\\\",true]\")){\n            map.put(\"registered\",\"0\");\n        }else {\n            map.put(\"registered\",\"1\");\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0xCAFEBABE00000034005D0A001600270A0028002907002A0A0003002708002B0A002C002D0B002E002F0800300800310A003200330A003400350800360A0034003708003808003908003A090015003B0B003C003D08003E0A003F00400700410700420700430100063C696E69743E010003282956010004436F646501000F4C696E654E756D6265725461626C65010004776F726B010066284C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B4C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F623B294C6A6176612F7574696C2F4C6973743B01000D537461636B4D61705461626C6507004407004501000A457863657074696F6E730700460100095369676E6174757265010090284C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B4C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F623B294C6A6176612F7574696C2F4C6973743C4C636F6D2F64616E672F637261776C65722F636F72652F7363726970742F6E6F726D2F5461736B3B3E3B01000A536F7572636546696C6501000C4469736365726E2E6A6176610C001800190700470C004800490100116A6176612F7574696C2F486173684D617001000570686F6E6507004A0C004B004C0700450C004D004E010006736F7572636501001070617373706F72742E7472632E636F6D0700440C004F00500700510C005200500100205B22666F726D2D76616C69646174696F6E2D6669656C642D30222C747275655D0C0053005401000A7265676973746572656401000130010001310C005500560700570C0058005901000D703270626C61636B5F6C69737407005A0C005B005C0100187363726970742F7032702F71796366752F4469736365726E0100106A6176612F6C616E672F4F626A656374010028636F6D2F64616E672F637261776C65722F636F72652F7363726970742F6E6F726D2F536372697074010027636F6D2F64616E672F637261776C65722F636F72652F666574636865722F6265616E2F5061676501000D6A6176612F7574696C2F4D61700100136A6176612F6C616E672F457863657074696F6E010028636F6D2F64616E672F637261776C65722F636F72652F7363726970742F746F6F6C732F46657463680100056665746368010057284C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B294C636F6D2F64616E672F637261776C65722F636F72652F666574636865722F6265616E2F506167653B01002A636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C6572010003676574010026284C6A6176612F6C616E672F537472696E673B294C6A6176612F6C616E672F4F626A6563743B010003707574010038284C6A6176612F6C616E672F4F626A6563743B4C6A6176612F6C616E672F4F626A6563743B294C6A6176612F6C616E672F4F626A6563743B01000A676574436F6E74656E7401001428294C6A6176612F6C616E672F537472696E673B0100106A6176612F6C616E672F537472696E670100047472696D010006657175616C73010015284C6A6176612F6C616E672F4F626A6563743B295A0100036C6F670100124C6F72672F736C66346A2F4C6F676765723B0100106F72672F736C66346A2F4C6F67676572010004696E666F010015284C6A6176612F6C616E672F537472696E673B2956010025636F6D2F64616E672F637261776C65722F636F72652F7363726970742F746F6F6C732F4442010006696E73657274010036284C6A6176612F6C616E672F537472696E673B4C6A6176612F6C616E672F537472696E673B4C6A6176612F7574696C2F4D61703B295600210015001600010017000000020001001800190001001A0000001D00010001000000052AB70001B100000001001B000000060001000000110001001C001D0003001A000000B9000400050000006B2BB800024EBB000359B700043A04190412052B1205B60006B90007030057190412081209B900070300572DB6000AB6000B120CB6000D9900121904120E120FB90007030057A7001B1904120E1210B90007030057B200112DB6000AB900120200121312051904B8001401B000000002001B0000002A000A0000001600050017000E0018001E0019002A001A0039001B0048001D0054001E0060002000690021001E0000000C0002FD004807001F0700201700210000000400010022002300000002002400010025000000020026, '2017-05-18 09:25:28');
INSERT INTO `job_task` VALUES ('p2p.xhx_exjr', 'Discern', 'package script.p2p.xhx_exjr;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"xhx_exjr\");\n        String html = page.getContent();\n        log.info(html);\n        if(html.contains(\"输入的用户不存在\")){\n            map.put(\"registered\",\"0\");\n        }else if(html.length()<200){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.jubaozhu', 'Discern', 'package script.p2p.jubaozhu;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport org.apache.commons.lang3.StringUtils;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        //不存在\n        //存在1\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"jubaozhu\");\n        if(StringUtils.isBlank(page.getContent().trim())){\n            map.put(\"registered\",\"0\");\n        }else if(page.getContent().trim().equals(\"1\")){\n            map.put(\"registered\",\"1\");\n        }else {\n            map.put(\"registered\",\"3\");\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.d_com', 'Discern', 'package script.p2p.d_com;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.parser.Parser;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Thread.sleep(20000);\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"d.com.cn\");\n        JSONObject json = null;\n        try {\n             json = Parser.json(page.getContent());\n        }catch (Exception e){\n            log.info(page.getContent());\n        }\n        if(json.getInteger(\"status\").equals(1)){\n            map.put(\"registered\",\"0\");\n        }else if(json.getInteger(\"status\").equals(0)){\n            map.put(\"registered\",\"1\");\n            /*{\"status\":0,\"info\":\"\\u624b\\u673a\\u53f7\\u7801\\\"17060910209\\\"\\u5df2\\u88ab\\u4f7f\\u7528\\uff0c\\u8bf7\\u91cd\n\\u65b0\\u8f93\\u5165\",\"data\":\"\",\"page\":\"\",\"msg\":\"\\u624b\\u673a\\u53f7\\u7801\\\"17060910209\\\"\\u5df2\\u88ab\\u4f7f\n\\u7528\\uff0c\\u8bf7\\u91cd\\u65b0\\u8f93\\u5165\"}*/\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._100lishi', 'Discern', 'package script.p2p._100lishi;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"100lishi\");\n        String result = page.getContent().trim();\n        if(result.equals(\"1\")){\n            map.put(\"registered\",\"0\");\n        }else if(result.equals(\"2\")){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._100lishi', 'Init', 'package script.p2p._100lishi;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.100lishi.com/?user&q=code/approve/valicode\");\n            newCrawler.setBody(\"mobile=\"+keyword.getKeyword());\n            newCrawler.appendBody(\"&reg_sms=true\");\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._168p2p', 'Init', 'package script.p2p._168p2p;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.168p2p.com/?ajax&q=phone_reg&type=is_phone_reg\");\n            newCrawler.setBody(\"phone=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._168p2p', 'Discern', 'package script.p2p._168p2p;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"168p2p\");\n        String result = page.getContent().trim();\n        JSONObject json = JSONObject.parseObject(result);\n        if(json.getInteger(\"flag\").equals(0)){\n            map.put(\"registered\",\"0\");\n        }else if(json.getInteger(\"flag\").equals(-2)){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._16pu', 'Discern', 'package script.p2p._16pu;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"16pu\");\n        String result = page.getContent().trim();\n        JSONObject json = JSONObject.parseObject(result);\n        if(json.getString(\"rmsg\").contains(\"该手机号码未注册\")){\n            map.put(\"registered\",\"0\");\n        }else if(json.getString(\"rmsg\").contains(\"ok\")){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0xCAFEBABE0000003400710A001A00300A003100320700330A000300300800340A003500360B0037003808003908003A0A003B003C0A003D003E0A003F00400800410A003F00420800430A003D004408004508004608004708004809001900490B004A004B08004C0A004D004E07004F0700500700510100063C696E69743E010003282956010004436F646501000F4C696E654E756D6265725461626C65010004776F726B010066284C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B4C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F623B294C6A6176612F7574696C2F4C6973743B01000D537461636B4D61705461626C6507004F07005207005307005407005507005607005701000A457863657074696F6E730700580100095369676E6174757265010090284C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B4C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F623B294C6A6176612F7574696C2F4C6973743C4C636F6D2F64616E672F637261776C65722F636F72652F7363726970742F6E6F726D2F5461736B3B3E3B01000A536F7572636546696C6501000C4469736365726E2E6A6176610C001C001D0700590C005A005B0100116A6176612F7574696C2F486173684D617001000570686F6E650700520C005C005D0700550C005E005F010006736F75726365010004313670750700540C006000610700560C006200610700570C00630064010004726D73670C00650066010018E8AFA5E6898BE69CBAE58FB7E7A081E69CAAE6B3A8E5868C0C0067006801000A72656769737465726564010001300100026F6B010001310C0069006A07006B0C006C006D01000D703270626C61636B5F6C69737407006E0C006F00700100187363726970742F7032702F5F313670752F4469736365726E0100106A6176612F6C616E672F4F626A656374010028636F6D2F64616E672F637261776C65722F636F72652F7363726970742F6E6F726D2F53637269707401002A636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C6572010026636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F62010027636F6D2F64616E672F637261776C65722F636F72652F666574636865722F6265616E2F5061676501000D6A6176612F7574696C2F4D61700100106A6176612F6C616E672F537472696E6701001F636F6D2F616C69626162612F666173746A736F6E2F4A534F4E4F626A6563740100136A6176612F6C616E672F457863657074696F6E010028636F6D2F64616E672F637261776C65722F636F72652F7363726970742F746F6F6C732F46657463680100056665746368010057284C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B294C636F6D2F64616E672F637261776C65722F636F72652F666574636865722F6265616E2F506167653B010003676574010026284C6A6176612F6C616E672F537472696E673B294C6A6176612F6C616E672F4F626A6563743B010003707574010038284C6A6176612F6C616E672F4F626A6563743B4C6A6176612F6C616E672F4F626A6563743B294C6A6176612F6C616E672F4F626A6563743B01000A676574436F6E74656E7401001428294C6A6176612F6C616E672F537472696E673B0100047472696D01000B70617273654F626A656374010035284C6A6176612F6C616E672F537472696E673B294C636F6D2F616C69626162612F666173746A736F6E2F4A534F4E4F626A6563743B010009676574537472696E67010026284C6A6176612F6C616E672F537472696E673B294C6A6176612F6C616E672F537472696E673B010008636F6E7461696E7301001B284C6A6176612F6C616E672F4368617253657175656E63653B295A0100036C6F670100124C6F72672F736C66346A2F4C6F676765723B0100106F72672F736C66346A2F4C6F67676572010004696E666F010015284C6A6176612F6C616E672F537472696E673B2956010025636F6D2F64616E672F637261776C65722F636F72652F7363726970742F746F6F6C732F4442010006696E73657274010036284C6A6176612F6C616E672F537472696E673B4C6A6176612F6C616E672F537472696E673B4C6A6176612F7574696C2F4D61703B295600210019001A0001001B000000020001001C001D0001001E0000001D00010001000000052AB70001B100000001001F000000060001000000120001002000210003001E000000FB000400070000008D2BB800024EBB000359B700043A04190412052B1205B60006B90007030057190412081209B900070300572DB6000AB6000B3A051905B8000C3A061906120DB6000E120FB60010990012190412111212B90007030057A7002D1906120DB6000E1213B60010990012190412111214B90007030057A7000FB200152DB6000AB900160200121712051904B8001801B000000002001F00000036000D0000001500050016000E0017001E0018002A00190033001A003A001B0049001C0058001D0067001E0076002000820022008B00230022000000200003FF0058000707002307002407002507002607002707002807002900001D0B002A000000040001002B002C00000002002D0001002E00000002002F, '2017-05-18 13:36:39');
INSERT INTO `job_task` VALUES ('p2p._16pu', 'Init', 'package script.p2p._16pu;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.16pu.com/ifExisSjhm.jhtml\");\n            newCrawler.setBody(\"sjhm=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._178wangdai', 'Discern', 'package script.p2p._178wangdai;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"178wangdai\");\n        String result = page.getContent().trim();\n        if(result.trim().equals(\"\\\"4\\\"\")){\n            map.put(\"registered\",\"0\");\n        }else if(result.trim().equals(\"\\\"5\\\"\")){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._178wangdai', 'Init', 'package script.p2p._178wangdai;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.178wangdai.com/registration/checkLogin\");\n            newCrawler.setBody(\"username=\"+keyword.getKeyword()+\"&pwd=\"+keyword.getKeyword()+\"_x\");\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._24jd', 'Discern', 'package script.p2p._24jd;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",\"16pu\");\n        String result = page.getContent().trim();\n        if(result.trim().contains(\"0\")){\n            map.put(\"registered\",\"0\");\n        }else if(result.trim().contains(\"1\")){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._24jd', 'Init', 'package script.p2p._24jd;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.24jd.com/mobileApi/proving.php\");\n            newCrawler.setBody(\"phone=\"+keyword.getKeyword()+\"&newzc=newzc\");\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._33lend', 'Init', 'package script.p2p._33lend;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.33lend.com/commonController.do?portalCallService&sid=portalEnrolnameExistService:verifyTheMembersOnly\");\n            newCrawler.setBody(\"enrolname=\"+keyword.getKeyword()+\"&type=0\");\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._33lend', 'Discern', 'package script.p2p._33lend;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",job.getJobId());\n        String result = page.getContent().trim();\n        JSONObject json = JSONObject.parseObject(result);\n        if(json.getString(\"message\").equals(\"账号不存在\")){\n            map.put(\"registered\",\"0\");\n        }else if(json.getString(\"message\").equals(\"账号已存在\")){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.ibank365', 'Discern', 'package script.p2p.ibank365;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.parser.Parser;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        //不存在{\"data\":\"0\"}\n        //存在{\"data\":\"6\"}\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",job.getJobId());\n        if(page.getContent().trim().equals(\"{\\\"data\\\":\\\"0\\\"}\")){\n            map.put(\"registered\",\"0\");\n        }else if(page.getContent().trim().equals(\"{\\\"data\\\":\\\"6\\\"}\")){\n            map.put(\"registered\",\"1\");\n        }else {\n            log.info(page.getContent());\n        }\n        DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p.ibank365', 'Init', 'package script.p2p.ibank365;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.ibank365.cn/banks/member/member/checkMobile.json?mobile=\"+keyword.getKeyword());\n            newCrawler.setBody(\"  \");\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._51bccf', 'Init', 'package script.p2p._51bccf;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\nimport com.dang.crawler.resources.utils.PropertiesUtils;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.51bccf.com/regist.page?0-1.IBehaviorListener.0-form-txtUserId\");\n            newCrawler.setBody(\"txtUserId=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._51jiecai', 'Discern', 'package script.p2p._51jiecai;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",job.getJobId());\n       if(page.getContent().trim().equals(\"1\")){\n           map.put(\"registered\",\"0\");\n       }else if(page.getContent().trim().equals(\"2\")){\n           map.put(\"registered\",\"1\");\n       }\n       DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._51bccf', 'Discern', 'package script.p2p._51bccf;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        WebDriver web = Fetch.getWebDriver();\n        web.get(\"https://www.51bccf.com/regist.page\");\n        Thread.sleep(5000);\n        web.findElement(By.xpath(\".//*[@name=\'txtUserId\']\")).sendKeys(crawler.get(\"phone\").toString());\n        web.findElement(By.id(\"inputVerifycode\")).click();\n        Thread.sleep(2000);\n        String html = web.getPageSource();\n        Fetch.freeDriver(web);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",job.getJobId());\n       if(html.contains(\"手机号码已被注\")){\n           map.put(\"registered\",\"1\");\n       }else {\n           map.put(\"registered\",\"0\");\n       }\n       DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._51jiecai', 'Init', 'package script.p2p._51jiecai;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\nimport com.dang.crawler.resources.utils.PropertiesUtils;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.51jiecai.com/passport/reg/u_exist.html?u=\"+keyword.getKeyword());\n            newCrawler.put(\"phone\",keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._51rzy', 'Discern', 'package script.p2p._51rzy;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.fetcher.bean.Page;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.core.script.tools.Fetch;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Created by mi on 2017/5/17.\n */\npublic class Discern implements Script {\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        Page page = Fetch.fetch(crawler);\n        Map map = new HashMap();\n        map.put(\"phone\",crawler.get(\"phone\"));\n        map.put(\"source\",job.getJobId());\n       if(page.getContent().trim().equals(\"1\")){\n           map.put(\"registered\",\"0\");\n       }else if(page.getContent().trim().equals(\"0\")){\n           map.put(\"registered\",\"1\");\n       }\n       DB.insert(\"p2pblack_list\",\"phone\",map);\n        return null;\n    }\n}\n', 0x
INSERT INTO `job_task` VALUES ('p2p._51rzy', 'Init', 'package script.p2p._51rzy;\n\nimport com.dang.crawler.core.control.bean.Crawler;\nimport com.dang.crawler.core.control.bean.Job;\nimport com.dang.crawler.core.script.norm.Script;\nimport com.dang.crawler.core.script.norm.Task;\nimport com.dang.crawler.core.script.tools.DB;\nimport com.dang.crawler.resources.mysql.model.Keyword;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by dang on 17-5-17.\n */\npublic class Init implements Script {\n    public static void main(String []args) throws Exception {\n        Init init =  new Init();\n        Job job = new Job();\n        job.setProjectId(2);\n        init.work(new Crawler(),job);\n    }\n    @Override\n    public List<Task> work(Crawler crawler, Job job) throws Exception {\n        List<Crawler> crawlerList = new ArrayList<>();\n        for(Keyword keyword : DB.getKeyWorld(0,100,crawler,job)){\n            Crawler newCrawler = new Crawler();\n            newCrawler.setUrl(\"https://www.51rzy.com/Ajax/CheckRegisterInfo\");\n            newCrawler.setBody(\"lei=Mobile&userinfo=\"+keyword.getKeyword());\n            crawlerList.add(newCrawler);\n        }\n        ArrayList<Task> results = new ArrayList<Task>();\n        results.add(new Task(crawlerList,\"Discern\"));\n        return results;\n    }\n}\n', 0xCAFEBABE0000003400680A001F00320700330A000200320700340A000400320A000400350700360A000700320A000200370700380A000A00320A0039003A0B003B003C0B003D003E0B003D003F0700400800410A000700420700430A001300320800440A001300450A001000460A001300470A000700480B003B004907004A08004B0A001B004C0A000A004907004D07004E0100063C696E69743E010003282956010004436F646501000F4C696E654E756D6265725461626C650100046D61696E010016285B4C6A6176612F6C616E672F537472696E673B295601000A457863657074696F6E7307004F010004776F726B010066284C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B4C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F623B294C6A6176612F7574696C2F4C6973743B01000D537461636B4D61705461626C650700500700510100095369676E6174757265010090284C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B4C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F623B294C6A6176612F7574696C2F4C6973743C4C636F6D2F64616E672F637261776C65722F636F72652F7363726970742F6E6F726D2F5461736B3B3E3B01000A536F7572636546696C65010009496E69742E6A6176610C002100220100167363726970742F7032702F5F3531727A792F496E6974010026636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F620C0052005301002A636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65720C0029002A0100136A6176612F7574696C2F41727261794C6973740700540C005500560700500C005700580700510C0059005A0C005B005C01002E636F6D2F64616E672F637261776C65722F7265736F75726365732F6D7973716C2F6D6F64656C2F4B6579776F726401002C68747470733A2F2F7777772E3531727A792E636F6D2F416A61782F436865636B5265676973746572496E666F0C005D005E0100176A6176612F6C616E672F537472696E674275696C6465720100146C65693D4D6F62696C652675736572696E666F3D0C005F00600C006100620C006300620C0064005E0C00650066010026636F6D2F64616E672F637261776C65722F636F72652F7363726970742F6E6F726D2F5461736B0100074469736365726E0C002100670100106A6176612F6C616E672F4F626A656374010028636F6D2F64616E672F637261776C65722F636F72652F7363726970742F6E6F726D2F5363726970740100136A6176612F6C616E672F457863657074696F6E01000E6A6176612F7574696C2F4C6973740100126A6176612F7574696C2F4974657261746F7201000C73657450726F6A656374496401000428492956010025636F6D2F64616E672F637261776C65722F636F72652F7363726970742F746F6F6C732F444201000B6765744B6579576F726C640100682849494C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F437261776C65723B4C636F6D2F64616E672F637261776C65722F636F72652F636F6E74726F6C2F6265616E2F4A6F623B294C6A6176612F7574696C2F4C6973743B0100086974657261746F7201001628294C6A6176612F7574696C2F4974657261746F723B0100076861734E65787401000328295A0100046E65787401001428294C6A6176612F6C616E672F4F626A6563743B01000673657455726C010015284C6A6176612F6C616E672F537472696E673B2956010006617070656E6401002D284C6A6176612F6C616E672F537472696E673B294C6A6176612F6C616E672F537472696E674275696C6465723B01000A6765744B6579776F726401001428294C6A6176612F6C616E672F537472696E673B010008746F537472696E67010007736574426F6479010003616464010015284C6A6176612F6C616E672F4F626A6563743B295A010025284C6A6176612F7574696C2F4C6973743B4C6A6176612F6C616E672F537472696E673B295600210002001F0001002000000003000100210022000100230000001D00010001000000052AB70001B100000001002400000006000100000010000900250026000200230000004B0003000300000023BB000259B700034CBB000459B700054D2C05B600062BBB000759B700082CB6000957B100000001002400000016000500000012000800130010001400150015002200160027000000040001002800010029002A00030023000000D10005000700000081BB000A59B7000B4E0310642B2CB8000CB9000D01003A041904B9000E01009900471904B9000F0100C000103A05BB000759B700083A0619061211B600121906BB001359B700141215B600161905B60017B60016B60018B600192D1906B9001A020057A7FFB5BB000A59B7000B3A041904BB001B592D121CB7001DB6001E571904B00000000200240000002A000A000000190008001A002D001B0036001C003D001D0059001E0062001F00650020006E0021007E0022002B0000000E0002FD001707002C07002DFA004D00270000000400010028002E00000002002F00010030000000020031, '2017-05-18 18:26:47');

-- ----------------------------
-- Table structure for keyword
-- ----------------------------
DROP TABLE IF EXISTS `keyword`;
CREATE TABLE `keyword` (
  `projectId` int(11) NOT NULL COMMENT '项目id',
  `kid` int(11) NOT NULL AUTO_INCREMENT COMMENT '关键词id',
  `keyword` varchar(255) DEFAULT NULL COMMENT '关键词',
  `note` varchar(255) DEFAULT NULL COMMENT '关键词注释',
  `createDate` datetime DEFAULT NULL COMMENT '关键词创建时间',
  PRIMARY KEY (`projectId`,`kid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of keyword
-- ----------------------------
INSERT INTO `keyword` VALUES ('1', '1', '575401144', '表情斗图王', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '2', '2243036633', 'GIF大湿胸', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '3', 'wmchwy1123', '唯美插画物语', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '4', '234995732', '美图头像馆', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '5', 'dapeijiang', '搭配酱', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '6', '5287647861', '可达鸭表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '7', '2510182240', '撕逼斗图表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '8', '2878821573', '明星娱乐小马甲', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '9', '3131397581', '表情包全收录', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '10', '3237071730', '壁纸喵', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '11', '1900886092', '表情娘', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '12', 'xiaophuatu', '头像图片集', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '13', '5763755594', '无水印搞笑表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '14', 'yqlljty', '逗比的表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '15', '271824499', 'GIF神动图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '16', '137973000', '搞笑', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '17', '5894980202', '女神CP头像', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '18', 'baoxiaogif', '爆笑Gif图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '19', '1902994290', '唯美图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '20', '2390275873', '斗图撕逼老司机', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '21', '2171386601', '古风仙侠玄幻图片', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '22', '5403928720', '斗图博士后', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '23', '1807136625', '顶尖摄影图片', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '24', '3205788742', 'GIF班长', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '25', 'dwjql', '金曲捞', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '26', 'newoman', '爆笑GIF图搜集', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '27', 'huoxingshaonv', '漫画插画集', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '28', '5465565905', '原图君', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '29', '5759154032', '无水印壁纸分享馆', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '30', '5680684161', '化猫c', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '31', '5180335506', '内涵姐', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '32', 'entpaparazzi', '新浪娱乐', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '33', '1005052257074754', '表情站', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '34', 'bqdabaoza', '砸你一脸表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '35', '5896504057', '原创手绘爱吐槽', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '36', '6042591747', '鹿晗无水印表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '37', '2511772174', '最牛GIF图库', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '38', 'fshionwoman', '喵星人的喵星球', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '39', '1713926427', '微博搞笑排行', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '40', 'zhang3250152', '全球热门搜罗', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '41', '2499731447', '原图欧尼', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '42', 'meinvdangan', 'GIF馆', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '43', '1896489287', '热表情', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '44', 'insyouxuan', 'instagram优选', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '45', '3538916125', '斗图搞笑表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '46', '2312100635', '掘逗士', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '47', '6048484195', '表情包小手册', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '48', '6070080631', '古风唯美图片', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '49', '5643335665', '好图无水印', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '50', '1921017243', '表情狂魔', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '51', '234628778', '全球奇葩搞笑', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '52', '823888937', '学生那点小事', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '53', '2910665684', '玖张图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '54', 'bbebybbeb', '奔波儿灞与灞波儿奔', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '55', 'xiamuyourenzhangfans', '治愈系-夏目友人帐', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '56', '5652793051', '表情包微信', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '57', 'wbqtjx', '收录唯美图片', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '58', '529150120', '超搞笑GIF图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '59', '3659412395', 'exo-表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '60', '234205288', '一只学屌', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '61', '579999138', '爆笑', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '62', '1005055614350686', '登登登Dn', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '63', '574000025', '我要天天讲笑话', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '64', '876613685', '錶情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '65', '2297217507', '囧囧乐汇', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '66', 'jxqysy', '剑侠情缘手游官微', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '67', '5062162721', '斗图小妹', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '68', '5687127924', '表情馆', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '69', '2654037900', '表情包原图哥', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '70', 'ixuwenming', '搞笑大百科', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '71', '5616413326', '这蜀黍笑死我了', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '72', 'djadonisiskind', 'DAdonikaaaaaaaaaaa', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '73', '3369711462', '添加到表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '74', '2603156851', '动图妈妈', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '75', '5969581482', '爆笑女神ing', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '76', '5179617625', '我和动漫的一天', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '77', 'nrzdm', '微信搞笑表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '78', '6094520429', '厉害了我的歌官微', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '79', 'huanqiuchuangyi', '创意画报社', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '80', '5762343745', '热Gif图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '81', '5208966720', '精彩表情君', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '82', '2936059657', 'Gif博士', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '83', '6088550205', '小福春', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '84', '5794519372', 'LOL动图菌', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '85', '6086748478', '清新头像壁纸酱', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '86', '17991399', '星座风水命理', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '87', '5749235970', '微信斗图表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '88', '1006065720474518', '英雄联盟', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '89', 'jourcam', '角蛙GIF', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '90', 'ityoumo', '程序员GIF', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '91', '2730259874', '最美图片集', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '92', 'heidoukaqi18kevin134', '爱宠物部落', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '93', '2515047730', '不知名的插画师', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '94', '2571857710', '斗图必备表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '95', 'gaoxiaobaike', '搞笑百科', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '96', 'p/100606229895584', '美图GIF', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '97', '5267970860', '全球搞笑趣事集', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '98', 'bmhgxm', '搞笑萌宠秀', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '99', '2402673123', '斗图家', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '100', '5863569045', '表情包斗图君', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '101', 'gifworld', '可爱有趣GIF动图世界', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '102', '3479514411', '老爹的表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '103', '5759207776', '斗图掌门', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '104', '2619724920', '动漫驿馆', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '105', '2873148000', '蘑菇头表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '106', '234850342', '一句神吐槽', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '107', '1812260927', '搞笑麻辣控', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '108', '339198883', '内涵段子微博', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '109', '3960772478', '卡殿不癫', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '110', 'appbp', 'LOL英雄联盟搞笑君', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '111', '5593178399', '搞笑表情包b', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '112', 'fengshuixue', '我们都是宠物迷', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '113', '2133255914', '抱猫王子', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '114', '2772354642', '动图君', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '115', '5669328912', '动漫宅菌', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '116', '2681064973', '头像集', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '117', '5792029099', '找图少女', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '118', '5396834744', '斗图少年', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '119', '5886307359', '微信斗图表情', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '120', '1820038114', '宫崎骏漫画集', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '121', 'mengchongwu', '可爱宠物中心', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '122', 'wcnl', '另类Gif图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '123', '3715641912', '萌宠那点事儿', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '124', '1841691885', '一颗不黏人的小糖豆', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '125', '631206788', '娱公子', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '126', '5627569181', '搞笑gif动态图片', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '127', 'neihan233', '每日内涵段子', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '128', '5356077814', '为国奋斗的陈建军', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '129', '3101945993', '几米漫画美图集', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '130', '5721295401', '斗图撕逼表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '131', '5700379397', '表情包无水印', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '132', '2168613091', '聊天表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '133', 'manhuaguaishou', 'Gif怪兽君', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '134', '1983693223', '搞笑图片会', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '135', '5321873930', '动图小婊砸', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '136', '5639358253', '荷尔萌', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '137', '6059154006', '奋斗吧熊卷', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '138', 'youaixiaohua', '表情包集中营', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '139', '113148888', '笑话糗事精选', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '140', '2504178564', '动漫子', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '141', '5850687664', '表情搜查姬', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '142', '517823486', '好奇博士', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '143', '5046876169', '表情写真馆', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '144', '535012677', '轻松搞笑连连看', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '145', '2368304713', '搞笑乐活族', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '146', '3995726455', 'CP头像欧尼', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '147', '2154547207', '动漫行者', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '148', '5685899643', '表情辑', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '149', 'zjfjt', 'gif斗图表情包', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '150', '51sh', '手绘工场', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '151', '2255032127', '爱豆日日爆', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '152', '2396658275', '趣闻搞笑', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '153', '1609390242', '萌图酱', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '154', '712371977', '搞笑萌宠GIF图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '155', '1660956507', '逗比大王', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '156', '5244215528', '小婊渣的日常', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '157', '5744440825', '斗图撕逼必备表情包_蟹哥哥', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '158', '3023173074', '37日', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '159', 'zzzgxjx', '笑到你屁股疼', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '160', '5824051112', '原图妈', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('1', '161', 'huiyouyongdezhu', '冷笑话趣图', '2017-05-17 11:05:34');
INSERT INTO `keyword` VALUES ('2', '1', '18345264842', null, '2017-05-17 16:10:26');
INSERT INTO `keyword` VALUES ('2', '2', '17060910209', '注册样本', '2017-05-17 16:10:47');
INSERT INTO `keyword` VALUES ('2', '3', '15478563548', null, '2017-05-17 16:11:04');
INSERT INTO `keyword` VALUES ('2', '4', '18812345685', null, '2017-05-17 16:11:26');

-- ----------------------------
-- Table structure for project
-- ----------------------------
DROP TABLE IF EXISTS `project`;
CREATE TABLE `project` (
  `projectId` int(11) NOT NULL,
  `name` varchar(255) DEFAULT NULL,
  `note` text,
  PRIMARY KEY (`projectId`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of project
-- ----------------------------
INSERT INTO `project` VALUES ('1', 'sina_weibo', '新浪微博');
INSERT INTO `project` VALUES ('2', 'p2p', 'p2p黑名单');

-- ----------------------------
-- Table structure for source
-- ----------------------------
DROP TABLE IF EXISTS `source`;
CREATE TABLE `source` (
  `sourceId` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `note` text,
  PRIMARY KEY (`sourceId`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of source
-- ----------------------------

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `userId` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`userId`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
